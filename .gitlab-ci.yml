stages:
  - build
  - manifest

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

.build:
  stage: build
  tags:
  - shell-executor
  - amd64
  script:
    - docker build -t $IMAGE_TAG $IMAGE_SRC_PATH
    - docker push $IMAGE_TAG

build-18.04-amd64:
  extends: .build
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:18.04-amd64
    IMAGE_SRC_PATH: docker-18.04
    
build-16.04-amd64:
  extends: .build
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:16.04-amd64
    IMAGE_SRC_PATH: docker-16.04
    
build-18.04-armhf:
  extends: .build
  tags:
    - shell-executor
    - armhf
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:18.04-armhf
    IMAGE_SRC_PATH: docker-18.04
    
build-16.04-armhf:
  extends: .build
  tags:
    - shell-executor
    - armhf
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:16.04-armhf
    IMAGE_SRC_PATH: docker-16.04

.manifest:
  stage: manifest
  tags:
    - shell-executor
    - armhf
  variables:
    DOCKER_CLI_EXPERIMENTAL: enabled
    IMAGE_TAG: $CI_REGISTRY_IMAGE:16.04
  script:
    - docker manifest create -a $IMAGE_TAG ${IMAGE_TAG}-amd64 ${IMAGE_TAG}-armhf || true
    - docker manifest push $IMAGE_TAG || true
    
manifest-16.04:
  extends: .manifest
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:16.04

manifest-18.04:
  extends: .manifest
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:18.04
